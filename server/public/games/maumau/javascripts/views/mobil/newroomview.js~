var NewRoomView = Backbone.View.extend({
    events: {
      "click .opponentcount .formSwitchButtons": "onOpponentCountClick",
      "click .reactiontime .formSwitchButtons": "onReactiontimeClick"
    },
    initialize: function() {
      _.bindAll(this, "render");
    },
    render: function() {   
      $(this.el).html(ich.newroomTmpl());        
      return this;
    },
    firstRender: function() {
      var self = this;
      this.render();
      
      self.$(".rowFormTextinput").click(function(e) {
        var offset = $(this).offset();

        var posStartX = offset.left + $(this).innerWidth() - 30;
        var posEndX = offset.left + $(this).innerWidth() + 20;

        var posStartY = offset.top + $(this).innerHeight() - 45;
        var posEndY = offset.top + $(this).innerHeight() + 5;

        if (e.clientX >= posStartX  && e.clientX <= posEndX &&
            e.clientY >= posStartY  && e.clientY <= posEndY) {
          alert("jooo");
        }


      })


      $("#gameview").append(this.el);
      
      return self;
    },
    onOpponentCountClick: function(e) {
      $(".formValueSwitchButtonsActive", this.$(e.target).parent()).removeClass("formValueSwitchButtonsActive");
      this.$(e.target).addClass("formValueSwitchButtonsActive");
      this.model.set({
        opponents: this.$(e.target).text()
      });
      
    },
    onReactiontimeClick: function(e) {
      $(".formValueSwitchButtonsActive", this.$(e.target).parent()).removeClass("formValueSwitchButtonsActive");
      this.$(e.target).addClass("formValueSwitchButtonsActive");
      this.model.set({
        reactiontime: this.$(e.target).text()
      });
      
    }
});
